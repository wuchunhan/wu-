# 資科一A 吳俊翰 10173123計算機概論期末筆記作業


# Linux 3 筆記

# 正規表達法 Regular Expression:
1. 是透過特殊符號來比對字串的方法 
2. 可對符合比對條件的字串進行搜尋、萃取、替代、轉換

# 符號講解
* 「‧」：可代替所有可能的字元
* 「?」：比對前一個字串或是不比對
* 「*」：比對前一個字串零次或是多次
* 「-」：分隔用
* 「+」：類似於*，但差別在於至少要與前一個字比對一次以上
* 「|」：或者
* 「^」：比對前開頭
* 「$」：比對結尾
* 「\」：將任何特殊字元，恢復成一般字元
* 「()」：把想找的相關字詞放入括號內，可依照括號裡的字元排序找到可能的結果
* 「[]」：任意比對字串內的每個項目


# Grep語法

1. 可從資料或檔案中，使用關鍵字或正規表達法找出想要的內容

# 參數講解
* 「-i」：忽略大小寫
* 「-n」：顯示匹配行及行號
* 「-r」：遞歸顯示目錄
* 「-c」：只輸出匹配行的計數
* 「-v」：只列出**不符合**的內容
* 「--color=never|always|auto 」：顏色標示
* 「-A」：多顯示匹配行的後幾行
* 「-B」：多顯示匹配行的前幾行
* 「-C」：多顯示匹配行的前後幾行


# WC 文字處理工具

1. 計算指定檔案內容的換行數、字數與位元組數

* 「-l」：只計算換行數
* 「-w」：只計算字數
* 「-c」：只計算位元組數
* 「-m」：只計算字元數
* 「-L」：計算最常行的長度

# CUT 文字處理工具

1.逐行擷取部分字元或欄位資料

* 「-b」：輸出的指定範圍以bytes作為單位
* 「-c」：輸出的指定範圍以字元數量作為單位
* 「-d」：指定分隔字元，default為tab作為分隔
* 「-f」：輸出的指定範圍(每筆data的第幾column作為區分)
* 「-s」：若該行無分隔字元則不顯示

# Paste 文字處理工具

1. 將每個文件以列對列的方式，一列一列加以合併

# Diff 文字處理工具

1. 比較文件的內容，特別是兩版本不同的同份文件

* 「-y」：以並列方式顯示文件的異同之處
* 「-W」：使用-y參數時，指定欄寬
* 「-C」：前後輸出格式
* 「-u」：統一格式輸出
* 「>」：覆蓋原有檔案
* 「>>」：追加檔案，不覆蓋繼續寫

# Sort 文字處理工具

1. 處理各種文字資料的排序問題

* 「-f」：忽略大小寫Uniq 文字處理工具
* 「-u」：去除重複資料
* 「-r」：反向排序
* 「-t」：指定欄位的分隔字元(default=blank or tab)
* 「-k」：指定欄位的編號
* 「-n」：依照實際數值的大小排序
* 「-h」：對有單位的數值排序
* 「-M」：依照月份排序

# Uniq 文字處理工具

1. 將連續重複文字刪除

* 「-c」：計算文字行重複次數
* 「-D」：只輸出有重複的文字行
* 「-d」：將重複行刪掉
* 「-u」：只輸出沒有重複的文字行
* 「-f」：指定要跳過的欄位
* 「-s」： 跳過每一行開頭幾個字元
* 「-w」：只比較每一行開頭幾個字元
* 「-i」： 忽略大小寫

# Tr 文字處理工具

1. 替換或刪除操作的字串轉換

* 「-c」： 用set1中字符集的補集替換此字符集，且字符集需符合ASCII
* 「-d」： 忽刪除檔案中所有在set1中出現的字元
* 「-s」： 刪除檔案中重複且set1中出現的字元，只保留一個

# Join 文字處理工具

1. 將兩個文件中，指定欄位內容相同的行連接起來

* 「-1」： 連接filename1指定的欄位
* 「-2」： 連接filename2指定的欄位
* 「-t」： 使用欄位的分隔符號
* 「-i」： 忽略大小寫
* 「-o」： 按指定的格式顯示結果
* 「-a」： 除了顯示結果，原檔案的其他行也顯示



# Linux 4 筆記

# awk 文字分析工具

1. 常用在對文字和資料進行分析處理
2. 檔案逐行的讀入
3. 以空格為預設分隔符號

# awk 語法

* 「-F」：指定分隔符**(是字串或正規表達法)**，**預設是空白**
* 「-f」：從指令碼檔案中讀取命令
* 「-v」：賦值變數，將外部變數遞給awk

# 參數講解

* 「$0」：當前record(列、橫行)
* 「$1~$n」：當前record的第N個欄位
* 「FS」：輸入field直欄分隔符（-F相同作用）預設空格
* 「RS」：輸入record(列、橫行)分割符，預設換行符
* 「NF」：欄位個數
* 「NR」：record數，就是行號，預設從1開始
* 「OFS」：輸出欄位分隔符，預設空格
* 「ORS」：輸出resord分割符，預設換行符



# Linux 5 筆記

# sed 文字分析工具

1. 是「stream editor 」的縮寫，顧名思義是進行串流的編輯
2. 字串取代、複製、刪除的功能
3. 自動化的修改文字檔

# sed 指令


*　option：以 「-」 符號開頭的功能
*　n1，n2：代表開始行數和結尾行數
*　command：進行的動作
*　pattern：給command使用的參數
*　replacement：當使用s指令時會使用
*　flag：當使用s指令時會使用

# sed 語法－常用選項

* 「-n」：沉默模式，只有經過sed處理的那行才會被印出
* 「-e」：直接在命令模式編輯、預設
* 「-f」：直接將sed動作寫在一個檔案內
* 「-i」：修改檔案

# sed 語法－常用指令

* 「a」：新增，在下一行插入字串；未指定行數的話，則是在每一行之後插入字串
* 「c」：取代，取代指定行數的內容
* 「d」：刪除，後面通常不接任何東西 
* 「i」：插入，在指定行數的前一行插入字串
* 「p」：印出，只印出受影響的行，常搭配「-n」使用
* 「s」：搜尋、取代，可搭配正規表達式使用，將搜尋的內容進行取代

# sed 語法－常用旗幟

* g:全部取代
* I:忽略大小寫
* w:把符合的結果寫入檔案
* [0-9]:每行第幾次出現

# Grep, Awk, Sed比較

# grep

1.文字搜尋工具
2.可用正規表達法，找出匹配的內容

# sed
1. 是一種線上編輯器
2. 一次只處理一行內容，可搭配正規表達法
3. 主要用來自動編輯一個以上檔案，簡化對檔案的反覆操作
4. 用於行間的內容操作

# awk
1. 文字分析工具
2. 逐行的讀入，可搭配正規表達法
3. 主要用在對文字和資料進行分析處理，以**空格**為預設分隔符號
4. 同時也是程式語言
5. 用於處理有欄位規則的行內內容,並支援格式化輸出


# Git

# 介紹

* 免費、開源專案管理工具
* 用來做軟體的版本控制與維護
* 記錄版本更動情形，保留對於檔案的新增、修改或是刪除等操作的歷史紀錄
* 分散式系統
* 可離線工作
* 多人合作專案時

# 優點

1. 版本儲存:儲存檔案的重要資訊
2. 共同編輯:可藉由repository和共同編輯者分享資料，不會因為兩人同時編輯，導致先進行編輯的人的內容被覆蓋掉
3. 儲存空間:git不是記錄版本差異,而是記錄檔案內容的快照,使git體積小、速度快

